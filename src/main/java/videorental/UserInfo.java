 /*
 * Copyright (C) 2021 badi_
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package videorental;

import java.awt.Color;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.WindowEvent;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.Types;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JPasswordField;

/**
 *
 * @author badi_
 */
public class UserInfo extends javax.swing.JFrame {

    /**
     * Creates new form UserInfo
     */
    public UserInfo(DBManager DB, Integer customerID) {
        this.customerID = customerID;
        this.DB = DB;
        pwdChanged = false;

        initComponents();

        if (customerID == 0) {
            String newPWD = Utils.makeSalt(10);
            jPasswordFieldPWD.setText(newPWD);
            jPasswordFieldPWD.setEnabled(true);
            jButtonReset.setEnabled(false);
            setTitle("New User");
            return;
        }
        //execute the following if editing existing user:

        setTitle("Edit User");
        jPasswordFieldPWD.setEnabled(false);
        jButtonReset.setEnabled(true);

        //Load in customer data
        String sql = "SELECT Firstname, Lastname, Address, Postcode, City, Phone, Email, DOB, Displayname, Joineddate FROM Customer"
                + " WHERE CustomerID = " + customerID + ";";
        DB.connect();
        ResultSet result = DB.makeQuery(sql);
        DB.close();

        //write customer data to text fields
        try {
            if (result.next()) {
                jTextFieldFirstname.setText(result.getString(1));
                jTextFieldLastname.setText(result.getString(2));
                jTextFieldAddress.setText(result.getString(3));
                jTextFieldPostcode.setText(result.getString(4));
                jTextFieldCity.setText(result.getString(5));
                jTextFieldPhone.setText(result.getString(6));
                jTextFieldEmail.setText(result.getString(7));
                jTextFieldDOB.setText(result.getDate(8).toString());
                String displayName = result.getString(9);
                if (displayName != null) {
                    jTextFieldDisplayname.setText(displayName);
                }
                joinedDate = result.getDate(10);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void closeWindow() {
        WindowEvent closingEvent = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closingEvent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelData = new javax.swing.JPanel();
        jLabelFirstName = new javax.swing.JLabel();
        jLabelAddress = new javax.swing.JLabel();
        jLabelLastName = new javax.swing.JLabel();
        jLabelCity = new javax.swing.JLabel();
        jLabelPostcode = new javax.swing.JLabel();
        jLabelDOB = new javax.swing.JLabel();
        jLabelEmail = new javax.swing.JLabel();
        jLabelPhone = new javax.swing.JLabel();
        jLabelDisplayName1 = new javax.swing.JLabel();
        jTextFieldFirstname = new javax.swing.JTextField();
        jTextFieldPhone = new javax.swing.JTextField();
        jTextFieldDisplayname = new javax.swing.JTextField();
        jTextFieldLastname = new javax.swing.JTextField();
        jTextFieldDOB = new javax.swing.JTextField();
        jTextFieldCity = new javax.swing.JTextField();
        jTextFieldPostcode = new javax.swing.JTextField();
        jTextFieldAddress = new javax.swing.JTextField();
        jTextFieldEmail = new javax.swing.JTextField();
        jLabelPWD = new javax.swing.JLabel();
        jPasswordFieldPWD = new javax.swing.JPasswordField();
        jButtonCopy = new javax.swing.JButton();
        jButtonSubmit = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jButtonReset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanelData.setBackground(new java.awt.Color(250, 250, 250));
        jPanelData.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanelData.setLayout(new java.awt.GridBagLayout());

        jLabelFirstName.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabelFirstName.setText("<html>First Name<small><sup>*</sup></small>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        jPanelData.add(jLabelFirstName, gridBagConstraints);

        jLabelAddress.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabelAddress.setText("<html>Address<small><sup>*</sup></small>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        jPanelData.add(jLabelAddress, gridBagConstraints);

        jLabelLastName.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabelLastName.setText("<html>Last Name<small><sup>*</sup></small>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        jPanelData.add(jLabelLastName, gridBagConstraints);

        jLabelCity.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabelCity.setText("<html>City<small><sup>*</sup></small>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        jPanelData.add(jLabelCity, gridBagConstraints);

        jLabelPostcode.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabelPostcode.setText("<html>Post Code<small><sup>*</sup></small>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        jPanelData.add(jLabelPostcode, gridBagConstraints);

        jLabelDOB.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabelDOB.setText("<html>Date of Birth (YYYY-MM-DD)<small><sup>*</sup></small>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        jPanelData.add(jLabelDOB, gridBagConstraints);

        jLabelEmail.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabelEmail.setText("<html>Email<small><sup>*</sup></small>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        jPanelData.add(jLabelEmail, gridBagConstraints);

        jLabelPhone.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabelPhone.setText("<html>Phone Number<small><sup>*</sup></small>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        jPanelData.add(jLabelPhone, gridBagConstraints);

        jLabelDisplayName1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabelDisplayName1.setText("Display Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        jPanelData.add(jLabelDisplayName1, gridBagConstraints);

        jTextFieldFirstname.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jTextFieldFirstname.setMinimumSize(new java.awt.Dimension(140, 22));
        jTextFieldFirstname.setPreferredSize(new java.awt.Dimension(140, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        jPanelData.add(jTextFieldFirstname, gridBagConstraints);

        jTextFieldPhone.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jTextFieldPhone.setMinimumSize(new java.awt.Dimension(140, 22));
        jTextFieldPhone.setPreferredSize(new java.awt.Dimension(140, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        jPanelData.add(jTextFieldPhone, gridBagConstraints);

        jTextFieldDisplayname.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jTextFieldDisplayname.setMinimumSize(new java.awt.Dimension(140, 22));
        jTextFieldDisplayname.setPreferredSize(new java.awt.Dimension(140, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        jPanelData.add(jTextFieldDisplayname, gridBagConstraints);

        jTextFieldLastname.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jTextFieldLastname.setMinimumSize(new java.awt.Dimension(140, 22));
        jTextFieldLastname.setPreferredSize(new java.awt.Dimension(140, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        jPanelData.add(jTextFieldLastname, gridBagConstraints);

        jTextFieldDOB.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jTextFieldDOB.setMinimumSize(new java.awt.Dimension(140, 22));
        jTextFieldDOB.setPreferredSize(new java.awt.Dimension(140, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        jPanelData.add(jTextFieldDOB, gridBagConstraints);

        jTextFieldCity.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jTextFieldCity.setMinimumSize(new java.awt.Dimension(140, 22));
        jTextFieldCity.setPreferredSize(new java.awt.Dimension(140, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        jPanelData.add(jTextFieldCity, gridBagConstraints);

        jTextFieldPostcode.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jTextFieldPostcode.setMinimumSize(new java.awt.Dimension(140, 22));
        jTextFieldPostcode.setPreferredSize(new java.awt.Dimension(140, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        jPanelData.add(jTextFieldPostcode, gridBagConstraints);

        jTextFieldAddress.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jTextFieldAddress.setMinimumSize(new java.awt.Dimension(140, 22));
        jTextFieldAddress.setPreferredSize(new java.awt.Dimension(140, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 10);
        jPanelData.add(jTextFieldAddress, gridBagConstraints);

        jTextFieldEmail.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jTextFieldEmail.setMinimumSize(new java.awt.Dimension(140, 22));
        jTextFieldEmail.setPreferredSize(new java.awt.Dimension(140, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        jPanelData.add(jTextFieldEmail, gridBagConstraints);

        jLabelPWD.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabelPWD.setText("Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(50, 10, 11, 0);
        jPanelData.add(jLabelPWD, gridBagConstraints);

        jPasswordFieldPWD.setBackground(new java.awt.Color(245, 245, 245));
        jPasswordFieldPWD.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jPasswordFieldPWD.setMinimumSize(new java.awt.Dimension(140, 22));
        jPasswordFieldPWD.setPreferredSize(new java.awt.Dimension(140, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 5, 10, 0);
        jPanelData.add(jPasswordFieldPWD, gridBagConstraints);

        jButtonCopy.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jButtonCopy.setText("Copy to Clipboard");
        jButtonCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCopyActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 5, 8, 10);
        jPanelData.add(jButtonCopy, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        getContentPane().add(jPanelData, gridBagConstraints);

        jButtonSubmit.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jButtonSubmit.setText("Submit");
        jButtonSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubmitActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 10);
        getContentPane().add(jButtonSubmit, gridBagConstraints);

        jButtonCancel.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 0);
        getContentPane().add(jButtonCancel, gridBagConstraints);

        jButtonReset.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jButtonReset.setText("Reset Password");
        jButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 30, 10, 0);
        getContentPane().add(jButtonReset, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCopyActionPerformed
        //read password
        char[] pwd = jPasswordFieldPWD.getPassword();
        //convert pwd into Transferrable StringSelection
        StringSelection selection = new StringSelection(String.valueOf(pwd));
        //get clipboard and transfer pwd
        Toolkit.getDefaultToolkit().getSystemClipboard().setContents(selection, null);

    }//GEN-LAST:event_jButtonCopyActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        closeWindow();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetActionPerformed
        jPasswordFieldPWD.setText(Utils.makeSalt(10));
        pwdChanged = true;
    }//GEN-LAST:event_jButtonResetActionPerformed

    private void jButtonSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubmitActionPerformed
        //set all text colors back to black
        jLabelFirstName.setForeground(Color.black);
        jLabelLastName.setForeground(Color.black);
        jLabelDOB.setForeground(Color.black);
        jLabelEmail.setForeground(Color.black);
        jLabelPhone.setForeground(Color.black);
        jLabelAddress.setForeground(Color.black);
        jLabelPostcode.setForeground(Color.black);
        jLabelCity.setForeground(Color.black);
        jLabelPWD.setForeground(Color.black);

        boolean error = false;

        //check for input errors
        if (jTextFieldFirstname.getText().isEmpty()) {
            jLabelFirstName.setForeground(Color.red);
            error = true;
        }
        if (jTextFieldLastname.getText().isEmpty()) {
            jLabelLastName.setForeground(Color.red);
            error = true;
        }
        //make sure date of birth is in correct format
        if (!jTextFieldDOB.getText().matches("\\d\\d\\d\\d-\\d\\d-\\d\\d")) {
            jLabelDOB.setForeground(Color.red);
            error = true;
        }
        if (jTextFieldEmail.getText().isEmpty()) {
            jLabelEmail.setForeground(Color.red);
            error = true;
        }
        //make sure phone number starts with optional '+', then only numbers or spaces. stripTrailing ensures that an input with only spaces will be invalid
        if (!jTextFieldPhone.getText().stripTrailing().matches("\\+?[0-9 ]+")) {
            jLabelPhone.setForeground(Color.red);
            error = true;
        }
        if (jTextFieldAddress.getText().isEmpty()) {
            jLabelAddress.setForeground(Color.red);
            error = true;
        }
        if (jTextFieldPostcode.getText().isEmpty()) {
            jLabelPostcode.setForeground(Color.red);
            error = true;
        }
        if (jTextFieldCity.getText().isEmpty()) {
            jLabelCity.setForeground(Color.red);
            error = true;
        }
        //if new user and password field is empty
        if (jPasswordFieldPWD.getPassword().length == 0 && customerID == 0) {
            jLabelPWD.setForeground(Color.red);
        }
        if (error) {
            return;
        }

        String sql;
        if (customerID == 0) {
            sql = "INSERT INTO Customer (CustomerID, Firstname, Lastname, Address, Postcode, City, Phone, Email, Joineddate, DOB, Displayname, Pwd, Salt)"
                    + " VALUES (null,?,?,?,?,?,?,?,?,?,?,SHA2(CONCAT(?,?),512),?);";
        } else {
            sql = "UPDATE Customer SET Firstname = ?, Lastname = ?, Address = ?, Postcode = ?, City = ?, Phone = ?, Email = ?,"
                    + " Joineddate = ?, DOB = ?, Displayname = ?"
                    + " WHERE CustomerID = ?";
        }
        ArrayList<Object> data = new ArrayList<>();
        data.add(jTextFieldFirstname.getText());
        data.add(jTextFieldLastname.getText());
        data.add(jTextFieldAddress.getText());
        data.add(jTextFieldPostcode.getText());
        data.add(jTextFieldCity.getText());
        data.add(jTextFieldPhone.getText());
        data.add(jTextFieldEmail.getText());
        //set current date as joineddate for new users
        if (customerID == 0) {
            java.sql.Date now = Date.valueOf(LocalDate.now());
            data.add(now);
        } else {
            data.add(joinedDate);
        }
        //set date of birth
        Date dob = Utils.getDate(jTextFieldDOB.getText());
        //abort, if Date couldn't be formed
        if (dob == null) {
            jTextFieldDOB.setForeground(Color.red);
            return;
        }
        data.add(dob);
        //add null if displayname-field empty
        String displayName = jTextFieldDisplayname.getText();
        if (displayName.isEmpty()) {
            data.add(new NullParameter(Types.VARCHAR));
        } else {
            data.add(displayName);
        }

        if (customerID == 0) {
            String salt = Utils.makeSalt(64);
            data.add(jPasswordFieldPWD.getPassword().toString());
            data.add(salt);
            data.add(salt);
        } else {
            data.add(customerID);
        }
        DB.connect();
        DB.makeQuery(sql, data);
        
        //update password, if exiating user password was reset
        if (customerID > 0 && pwdChanged) {
            String newSalt = Utils.makeSalt(64);
            sql = "UPDATE Customer SET Pwd = SHA2(CONCAT(?,?),512), Salt = ?"
                    + " WHERE CustomerID = ?;";
            data.clear();
            data.add(jPasswordFieldPWD.getPassword().toString());
            data.add(newSalt);
            data.add(newSalt);
            data.add(customerID);
            DB.makeQuery(sql, data);
        }
        DB.close();
        closeWindow();
    }//GEN-LAST:event_jButtonSubmitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Metal look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserInfo(null, 0).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonCopy;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JButton jButtonSubmit;
    private javax.swing.JLabel jLabelAddress;
    private javax.swing.JLabel jLabelCity;
    private javax.swing.JLabel jLabelDOB;
    private javax.swing.JLabel jLabelDisplayName1;
    private javax.swing.JLabel jLabelEmail;
    private javax.swing.JLabel jLabelFirstName;
    private javax.swing.JLabel jLabelLastName;
    private javax.swing.JLabel jLabelPWD;
    private javax.swing.JLabel jLabelPhone;
    private javax.swing.JLabel jLabelPostcode;
    private javax.swing.JPanel jPanelData;
    private javax.swing.JPasswordField jPasswordFieldPWD;
    private javax.swing.JTextField jTextFieldAddress;
    private javax.swing.JTextField jTextFieldCity;
    private javax.swing.JTextField jTextFieldDOB;
    private javax.swing.JTextField jTextFieldDisplayname;
    private javax.swing.JTextField jTextFieldEmail;
    private javax.swing.JTextField jTextFieldFirstname;
    private javax.swing.JTextField jTextFieldLastname;
    private javax.swing.JTextField jTextFieldPhone;
    private javax.swing.JTextField jTextFieldPostcode;
    // End of variables declaration//GEN-END:variables
    private Integer customerID;
    private boolean pwdChanged;
    private Date joinedDate;
    private DBManager DB;
}
